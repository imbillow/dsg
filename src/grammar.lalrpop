use std::str::FromStr;
use crate::ast::{Expr,Opcode};

grammar;

pub Expr: Box<Expr> = {
    Expr ExprOp Factor => Box::new(Expr::Op(<>)),
    Factor
};

ExprOp: Opcode = { // (3)
    "+" => Opcode::Add,
    "-" => Opcode::Sub,
};

pub Factor: Box<Expr> = {
    Factor FactorOp Term => Box::new(Expr::Op(<>)),
   Term
}

FactorOp: Opcode = { // (3)
    "*" => Opcode::Mul,
    "/" => Opcode::Div,
};

pub Term: Box<Expr> = {
    Num => Box::new(Expr::Number(<>)),
    "(" <Expr> ")"
};

Num: i32 = <s:r"[0-9]+"> => i32::from_str(s).unwrap();
